function getAct1Level(d){var b="grass";var e;var a;var c=[];switch(d){case 1:e=[makeObstacle(7,11,"house"),makeObstacle(6,10,"tree"),makeObstacle(8,10,"tree"),makeObstacle(6,9,"tree"),makeObstacle(8,9,"tree"),makeObstacle(6,8,"tree"),makeObstacle(8,8,"tree"),makeObstacle(6,7,"tree"),makeObstacle(8,7,"tree"),makeSteppable(7,10,"path"),makeSteppable(7,9,"path"),makeSteppable(7,8,"path"),makeSteppable(7,7,"path"),makeObstacle(6,6,"tree"),makeObstacle(8,6,"tree"),makeSteppable(7,6,"path"),makeSteppable(7,5,"path"),makeSteppable(7,4,"path"),makeSteppable(7,3,"path"),makeSteppable(7,2,"path"),makeSteppable(7,1,"path"),makeSteppable(7,0,"path"),makeEnemy("Squirrel",7,7,1,0),];a=[[7,8],[7,8],[7,8],[7,8],[7,8],];c=[makeHathixDialogue("What?! I can't even go past my front door without being attacked! Gah. Guess I better beat this guy up			. First click on me to select me, and then click on the up attack button to attack the squirrel until it dies."),];break;case 2:e=[makeSteppable(7,14,"path"),makeSteppable(7,13,"path"),makeSteppable(7,12,"path"),makeSteppable(7,11,"path"),makeSteppable(7,10,"path"),makeSteppable(7,9,"path"),makeSteppable(7,8,"path"),makeObstacle(6,8,"house"),makeObstacle(6,7,"house2"),makeObstacle(8,7,"house3"),makeObstacle(8,8,"house2"),makeObstacle(8,6,"house2"),makeObstacle(6,6,"house"),makeObstacle(5,7,"house3"),makeObstacle(9,7,"house"),makeObstacle(11,7,"tree"),makeObstacle(3,7,"tree"),makeObstacle(3,6,"tree"),makeObstacle(3,8,"tree"),makeObstacle(11,6,"tree"),makeObstacle(11,8,"tree"),makeObstacle(4,5,"tree"),makeObstacle(10,5,"tree"),makeSteppable(7,7,"path"),makeSteppable(7,6,"path"),makeSteppable(7,5,"path"),makeSteppable(6,4,"path"),makeSteppable(5,3,"path"),makeSteppable(4,2,"path"),makeSteppable(4,1,"path"),makeSteppable(4,0,"path"),makeObstacle(5,2,"house"),makeEnemy("Squirrel",7,7,1,0),makeEnemy("Squirrel",6,5,1,0),makeEnemy("Squirrel",7,8,1,0),];a=[[7,14],[7,14],[7,14],[7,14],[7,14],];c=[makeHathixDialogue("It's a huge swarm of squirrels... I should go up to them. Click on me and use the move arrow buttons to move me.			And use the attack arrow buttons to attack once I'm adjacent to a squirrel."),];break;case 3:e=[makeEnemy("Squirrel",5,3,1),makeSteppable(2,14,"path"),makeSteppable(2,13,"path"),makeSteppable(2,12,"path"),makeSteppable(3,11,"path"),makeSteppable(4,10,"path"),makeSteppable(5,9,"path"),makeSteppable(6,8,"path"),makeSteppable(7,7,"path"),makeSteppable(8,6,"path"),makeSteppable(7,5,"path"),makeSteppable(6,4,"path"),makeSteppable(5,3,"path"),makeSteppable(9,6,"path"),makeSteppable(10,6,"path"),makeSteppable(11,6,"path"),makeSteppable(12,6,"path"),makeSteppable(13,6,"path"),makeSteppable(14,6,"path"),makeEnemy("Cow",6,8,1,1),makeEnemy("Squirrel",14,6,2),makeObstacle(14,5,"tree"),makeObstacle(13,5,"tree"),makeObstacle(13,7,"tree"),makeObstacle(14,7,"tree"),makeObstacle(12,5,"tree"),makeObstacle(12,7,"tree"),makeObstacle(8,7,"house"),makeObstacle(4,2,"house"),makeObstacle(14,8,"tree"),makeObstacle(14,4,"tree"),makeObstacle(13,4,"tree"),makeObstacle(13,8,"tree"),makeObstacle(14,9,"tree"),makeObstacle(14,3,"tree"),makeHeart(8,8,"half"),];a=[[2,12],[2,12],[2,12],[2,12],[2,12],];c=[makeHathixDialogue("Wait, I think I know that cow. So why is he fighting against me?"),makeEnemyDialogue("Cow","Oh, hey, hathix. I'm just fighting you because Llama pays so well. If you beat me,			then I can join you."),makeEnemyDialogue("Cow","Once I join you, you can switch between us by clicking on us."),];break;case 4:e=[makeHeart(9,6,"half"),makeSteppable(4,14,"path"),makeSteppable(4,13,"path"),makeSteppable(4,12,"path"),makeSteppable(4,11,"path"),makeSteppable(4,10,"path"),makeSteppable(4,9,"path"),makeSteppable(5,9,"path"),makeSteppable(6,9,"path"),makeSteppable(7,9,"path"),makeSteppable(8,9,"path"),makeSteppable(9,9,"path"),makeSteppable(9,8,"path"),makeSteppable(9,7,"path"),makeSteppable(9,6,"path"),makeSteppable(10,6,"path"),makeSteppable(11,6,"path"),makeSteppable(12,6,"path"),makeSteppable(13,6,"path"),makeSteppable(14,6,"path"),makeSteppable(10,9,"dirt"),makeSteppable(10,10,"dirt"),makeSteppable(10,11,"dirt"),makeObstacle(10,12,"house3"),makeObstacle(11,11,"house2"),makeEnemy("Cow",11,12,1),makeEnemy("Squirrel",12,1,2),makeObstacle(9,11,"tree"),makeObstacle(8,5,"tree"),makeObstacle(9,5,"tree"),makeObstacle(8,6,"tree"),makeObstacle(14,5,"tree"),makeObstacle(14,7,"tree"),makeObstacle(10,8,"hydrant"),makeObstacle(3,12,"hydrant"),makeEnemy("Squirrel",5,13,1),makeEnemy("Squirrel",3,1,1),makeSteppable(6,8,"dirt"),makeObstacle(6,7,"house"),makeObstacle(7,8,"hydrant"),];a=[[4,14],[3,14],[5,14],[6,14],[2,14],];c=[makeHathixDialogue("Phew, I'm tired. And look at all those enemies..."),makeEnemyDialogue("Squirrel","You want our heart, huh? Well come get it! Hehehe!"),makeHathixDialogue("Looks like that heart over there will heal half of anyone's health. Better go get it."),];break;case 5:e=[makeObstacle(0,4,"tree"),makeObstacle(0,6,"tree"),makeObstacle(1,7,"tree"),makeObstacle(2,8,"tree"),makeObstacle(2,6,"tree"),makeObstacle(2,4,"tree"),makeObstacle(1,3,"tree"),makeObstacle(2,2,"tree"),makeObstacle(2,3,"tree"),makeObstacle(2,7,"tree"),makeObstacle(3,6,"tree"),makeObstacle(3,4,"tree"),makeObstacle(4,4,"tree"),makeObstacle(4,6,"tree"),makeObstacle(5,4,"tree"),makeObstacle(5,6,"tree"),makeHeart(0,5,"full"),makeHeart(14,14,"quarter"),makeHeart(14,0,"quarter"),makeObstacle(6,4,"tree"),makeObstacle(6,6,"tree"),makeEnemy("Squirrel",10,1,2),makeEnemy("Squirrel",8,5,1),makeEnemy("Pig",5,9,1,0.5),makeEnemy("Cow",11,13,1),makeEnemy("Squirrel",11,8,2),makeObstacle(12,3,"tree"),makeObstacle(7,12,"tree"),makeObstacle(4,1,"tree"),makeObstacle(1,11,"tree"),makeObstacle(3,14,"tree"),makeObstacle(11,10,"tree"),makeObstacle(9,7,"tree"),makeObstacle(13,13,"tree"),makeObstacle(14,13,"tree"),makeObstacle(12,12,"tree"),makeObstacle(11,12,"tree"),];a=[[3,5],[2,5],[1,5],[1,6],[1,4],];c=[makeHathixDialogue("Hmm... OK, according to my map, we're on our way to Albukrispy.			Just need to get through this forest and then it's pretty easy going."),makeEnemyDialogue("Pig","Hold up! This is an ambush!"),makeHathixDialogue("Wait, if it's an ambush, aren't you not supposed to tell us about it?"),makeEnemyDialogue("Pig","Good point. Er, uh, could you pretend you didn't hear that?"),makeHathixDialogue("Whatever. We should spread out to take on all the enemies. There are hearts around here if we need them."),makeEnemyDialogue("Pig","I kinda have to agree with you. Everyone, go get 'em!"),];break;case 6:e=[makeSteppable(0,3,"path"),makeSteppable(1,3,"path"),makeSteppable(2,3,"path"),makeSteppable(3,3,"path"),makeSteppable(4,3,"path"),makeSteppable(5,3,"path"),makeSteppable(5,4,"path"),makeSteppable(5,5,"path"),makeObstacle(2,2,"sign"),makeSteppable(5,6,"sidewalk"),makeSteppable(4,6,"sidewalk"),makeSteppable(6,6,"sidewalk"),makeSteppable(4,7,"sidewalk"),makeSteppable(5,7,"sidewalk"),makeSteppable(6,7,"sidewalk"),makeSteppable(4,8,"sidewalk"),makeSteppable(5,8,"sidewalk"),makeSteppable(6,8,"sidewalk"),makeSteppable(4,9,"sidewalk"),makeSteppable(5,9,"sidewalk"),makeSteppable(6,9,"sidewalk"),makeSteppable(4,10,"sidewalk"),makeSteppable(5,10,"sidewalk"),makeSteppable(6,10,"sidewalk"),makeSteppable(4,11,"sidewalk"),makeSteppable(5,11,"sidewalk"),makeSteppable(6,11,"sidewalk"),makeSteppable(4,12,"sidewalk"),makeSteppable(5,12,"sidewalk"),makeSteppable(6,12,"sidewalk"),makeSteppable(4,13,"sidewalk"),makeSteppable(5,13,"sidewalk"),makeSteppable(6,13,"sidewalk"),makeSteppable(4,14,"sidewalk"),makeSteppable(5,14,"sidewalk"),makeSteppable(6,14,"sidewalk"),makeObstacle(5,7,"hotel"),makeObstacle(5,9,"tree"),makeObstacle(5,10,"tree"),makeObstacle(5,11,"tree"),makeObstacle(3,11,"shop"),makeObstacle(7,14,"building"),makeObstacle(3,14,"shop"),makeObstacle(7,6,"house2"),makeObstacle(3,9,"house2"),makeSteppable(7,11,"sidewalk"),makeSteppable(8,11,"sidewalk"),makeSteppable(9,11,"sidewalk"),makeSteppable(10,11,"sidewalk"),makeSteppable(11,11,"sidewalk"),makeSteppable(12,11,"sidewalk"),makeSteppable(13,11,"sidewalk"),makeSteppable(14,11,"sidewalk"),makeObstacle(14,10,"house3"),makeObstacle(14,12,"house2"),makeObstacle(13,10,"building"),makeObstacle(13,12,"house"),makeObstacle(12,12,"hydrant"),makeObstacle(10,10,"tree"),makeSteppable(6,3,"path"),makeSteppable(7,3,"path"),makeSteppable(8,3,"path"),makeSteppable(9,3,"path"),makeSteppable(10,3,"path"),makeSteppable(11,3,"path"),makeSteppable(12,3,"path"),makeSteppable(13,3,"path"),makeSteppable(14,3,"path"),makeObstacle(7,10,"house"),makeObstacle(7,12,"house3"),makeObstacle(3,13,"shop"),makeObstacle(3,6,"house2"),makeEnemy("Pig",13,11,2),makeEnemy("Squirrel",3,12,2),makeEnemy("Sheep",13,3,1,0.5),makeEnemy("Sheep",8,14,1),makeEnemy("Squirrel",11,6,2),makeHeart(5,8,"half"),makeHeart(14,11,"half"),makeHeart(7,3,"quarter"),];a=[[2,3],[1,3],[1,2],[1,4],[0,3],];c=[makeSignDialogue("Welcome to Albukrispy! Population 15,000."),makeHathixDialogue("Phew, we're finally here. But how can we find a boat out of here?"),makeBystanderDialogue("Panda","Oh, hey kids. Albukrispy is a seaside town; the dock's at the far side of town."),makeBystanderDialogue("Panda","And, by the way, look out for those sheep. They may look cute but they're really fierce."),makeEnemyDialogue("Chicken","Quick! They're coming this way! Hurry, guys!"),];break;case 7:b="sidewalk";e=[makeObstacle(10,8,"tree"),makeObstacle(11,8,"tree"),makeObstacle(10,9,"tree"),makeObstacle(10,10,"tree"),makeObstacle(11,10,"tree"),makeObstacle(12,8,"tree"),makeObstacle(12,10,"tree"),makeHeart(11,9,"half"),makeObstacle(1,1,"tree"),makeObstacle(2,1,"tree"),makeObstacle(3,1,"tree"),makeObstacle(3,2,"tree"),makeObstacle(3,3,"tree"),makeObstacle(2,3,"tree"),makeObstacle(1,3,"tree"),makeHeart(2,2,"half"),makeObstacle(8,14,"sign"),makeObstacle(10,1,"shop"),makeObstacle(10,3,"shop"),makeObstacle(10,2,"shop"),makeObstacle(10,5,"shop"),makeObstacle(10,6,"shop"),makeObstacle(10,7,"shop"),makeEnemy("Sheep",8,5,1),makeEnemy("Pig",6,7,2),makeEnemy("Cow",4,5,1),makeEnemy("Squirrel",6,3,2),makeEnemy("Sheep",14,4,2),makeObstacle(2,11,"house3"),makeObstacle(1,11,"house2"),makeObstacle(2,12,"house"),makeObstacle(1,12,"house"),makeObstacle(0,11,"house3"),makeObstacle(0,12,"house2"),makeObstacle(0,13,"house"),makeObstacle(1,13,"house3"),makeEnemy("Pig",2,13,2),makeObstacle(2,6,"building"),makeObstacle(2,7,"building"),makeObstacle(2,8,"building"),makeObstacle(2,9,"building"),makeObstacle(2,10,"building"),makeObstacle(10,11,"hotel"),makeObstacle(11,11,"building"),makeObstacle(11,12,"bank"),makeObstacle(10,12,"hotel"),makeObstacle(10,13,"building"),makeObstacle(11,13,"house"),makeObstacle(12,12,"house"),makeObstacle(12,13,"house3"),makeEnemy("Cow",12,11,1),makeObstacle(5,11,"house"),makeObstacle(6,11,"building"),makeObstacle(7,11,"shop"),makeHeart(8,13,"quarter"),makeHeart(1,10,"quarter"),makeSteppable(10,8,"grass"),makeSteppable(11,8,"grass"),makeSteppable(12,8,"grass"),makeSteppable(10,9,"grass"),makeSteppable(11,9,"grass"),makeSteppable(12,9,"grass"),makeSteppable(10,10,"grass"),makeSteppable(11,10,"grass"),makeSteppable(12,10,"grass"),makeSteppable(1,1,"grass"),makeSteppable(2,1,"grass"),makeSteppable(3,1,"grass"),makeSteppable(1,2,"grass"),makeSteppable(2,2,"grass"),makeSteppable(3,2,"grass"),makeSteppable(1,3,"grass"),makeSteppable(2,3,"grass"),makeSteppable(3,3,"grass"),];a=[[6,5],[6,4],[7,5],[6,6],[5,5],];c=[makeEnemyDialogue("Pig","Remember me? I'm the guy you bad-mouthed back in the forest. Well guess what? Now I have the upper hand.			Get 'em, boys!"),makeEnemyDialogue("Cow","*Ahem*"),makeEnemyDialogue("Pig","Uh, yeah, and girls."),makeHathixDialogue("Again, whatever. Say, is that a sign over there? What's it say?"),makeSignDialogue("Albukrispy Harbor this way"),makeHathixDialogue("OK guys, let's stay together and beat these guys up. We're almost there!"),];break;case 8:b="sidewalk";e=[makeObstacle(14,5,"water"),makeObstacle(13,5,"water"),makeObstacle(12,6,"water"),makeObstacle(11,8,"water"),makeObstacle(11,7,"water"),makeObstacle(12,9,"water"),makeObstacle(13,10,"water"),makeObstacle(13,11,"water"),makeObstacle(12,12,"water"),makeObstacle(11,13,"water"),makeObstacle(10,13,"water"),makeObstacle(9,13,"water"),makeObstacle(8,14,"water"),makeObstacle(12,5,"water"),makeObstacle(11,6,"water"),makeObstacle(13,6,"water"),makeSteppable(9,10,"bridge"),makeObstacle(10,10,"water"),makeSteppable(9,11,"bridge"),makeSteppable(9,12,"bridge"),makeSteppable(9,9,"bridge"),makeObstacle(8,9,"water"),makeObstacle(8,10,"water"),makeObstacle(8,11,"water"),makeObstacle(8,12,"water"),makeObstacle(8,13,"water"),makeObstacle(11,9,"water"),makeObstacle(10,9,"water"),makeObstacle(12,7,"water"),makeObstacle(12,8,"water"),makeObstacle(13,7,"water"),makeObstacle(14,6,"water"),makeObstacle(14,7,"water"),makeObstacle(13,8,"water"),makeObstacle(14,8,"water"),makeObstacle(13,9,"water"),makeObstacle(14,9,"water"),makeObstacle(14,10,"water"),makeObstacle(14,11,"water"),makeObstacle(13,12,"water"),makeObstacle(14,12,"water"),makeObstacle(9,14,"water"),makeObstacle(10,14,"water"),makeObstacle(11,14,"water"),makeObstacle(12,13,"water"),makeObstacle(14,14,"water"),makeObstacle(14,13,"water"),makeObstacle(7,11,"water"),makeObstacle(7,12,"water"),makeObstacle(7,13,"water"),makeObstacle(7,14,"water"),makeObstacle(6,14,"water"),makeObstacle(6,13,"water"),makeObstacle(5,14,"water"),makeObstacle(10,8,"water"),makeObstacle(8,8,"water"),makeObstacle(13,4,"water"),makeSteppable(11,10,"grass"),makeSteppable(12,10,"grass"),makeSteppable(10,11,"grass"),makeSteppable(11,11,"grass"),makeSteppable(12,11,"grass"),makeSteppable(10,12,"grass"),makeSteppable(11,12,"grass"),makeSteppable(13,13,"grass"),makeSteppable(12,14,"grass"),makeSteppable(13,14,"grass"),makeBoss("Colonel Fried Chicken","Chicken",9,12,5),makeObstacle(6,7,"building"),makeObstacle(6,8,"building"),makeObstacle(6,9,"house3"),makeObstacle(6,10,"house"),makeObstacle(10,5,"house"),makeObstacle(11,4,"house"),makeObstacle(12,3,"house2"),makeObstacle(13,3,"hydrant"),makeSteppable(5,13,"bridge"),makeObstacle(4,13,"water"),makeObstacle(4,14,"water"),makeHeart(5,13,"half"),makeHeart(12,10,"full"),makeObstacle(1,4,"tree"),makeObstacle(2,4,"tree"),makeObstacle(1,5,"tree"),makeObstacle(2,5,"tree"),makeObstacle(2,10,"house"),makeObstacle(11,1,"house2"),makeObstacle(0,0,"bank"),makeObstacle(0,1,"hotel"),makeObstacle(1,0,"building"),makeObstacle(12,1,"house3"),makeObstacle(13,1,"house"),makeHeart(14,2,"half"),];a=[[6,3],[5,3],[6,2],[5,4],[7,2],];c=[makeHathixDialogue("Well, there's the harbor. So the ship should be around here somewhere..."),];break}return new Level("1-"+d,b,e,a,c)}function Animal(e,h,c,g,f,a,i,b,d){this.type=e;this.isAlly=h;this.x=g;this.y=f;this.isAnimal=true;this.hash=e+Math.floor(Math.random()*1000);if(b){this.name=b}else{this.name=e}if(d===undefined){this.recruitmentChance=CHANCE_OF_RECRUITMENT}else{this.recruitmentChance=d}this.elem=c;var j=this;this.elem.onmouseover=function(k){setHoverInfo(j,k)};this.elem.onmouseout=function(){hideHoverInfo()};if(this.isAlly){this.elem.className="ally";this.elem.onclick=function(){selectAnimal(j)}}else{this.elem.className="enemy"}this.level=a;this.experience=0;this.statDB=ANIMAL_DB[this.type];this.attack=function(){return this.calculateStat(this.statDB.baseAtk,this.statDB.atkRaise)};this.defense=function(){return this.calculateStat(this.statDB.baseDef,this.statDB.defRaise)};this.maxHP=function(){return this.calculateStat(this.statDB.baseHP,this.statDB.HPRaise)};this.calculateStat=function(l,k){return l+k*this.level};if(i){this.currentHP=i}else{this.currentHP=this.maxHP()}this.HPPercent=function(){return this.currentHP/this.maxHP()};this.experienceLeft=function(){return EXPERIENCE_PER_LEVEL-this.experience};this.isFriendOf=function(k){return k.isAlly==this.isAlly};this.gainHP=function(l){this.currentHP+=l;var k=this.maxHP();if(this.currentHP>k){this.currentHP=k}};this.gainHPPercent=function(k){this.gainHP(Math.round(this.maxHP()*k))};this.loseHP=function(k){this.currentHP-=k;if(this.currentHP<=0){this.currentHP=0;return true}else{return false}};this.fullHeal=function(){this.gainHP(this.maxHP())};this.die=function(){this.elem.style.display="none";currentLevel.removeObjectFromGrid(this);Logger.log(this.name+" died!");if(this.isAlly){deselectAnimal(this);removeTeammate(this);if(this.name==MAIN_CHAR_NAME){Logger.log("<strong>GAME OVER!</strong>")}}else{tryToEndLevel()}};this.recruit=function(){if(h){return}this.name=getInput(this.name+" wants to join your team! Give it a new name?",this.name);Logger.log(this.name+" joined the team!");addTeammate(this);this.gainExperienceNum(RECRUITMENT_BONUS);this.fullHeal();this.elem.className="ally";this.elem.style.cursor="pointer";this.elem.onclick=function(){selectAnimal(j)};selectAnimal(this);tryToEndLevel()};this.gainExperience=function(k){var m=this.level-k.level;var l=0;if(m>0){l=120/m}else{if(m==0){l=100}else{if(m<0){l=-120*m}}}l=Math.round(l);this.gainExperienceNum(l)};this.gainExperienceNum=function(k){this.experience+=k;while(this.experience>=EXPERIENCE_PER_LEVEL){this.experience-=EXPERIENCE_PER_LEVEL;this.levelUp()}};this.levelUp=function(){if(this.level<MAX_LEVEL){this.level++}this.fullHeal();Logger.log(this.name+" grew to level <strong>"+this.level+"</strong>!<br />Attack +"+this.statDB.atkRaise+", Defense +"+this.statDB.defRaise+", HP +"+this.statDB.HPRaise)};this.setLocation=function(k,l){this.x=k;this.y=l};this.xPixels=function(){return this.x*TILE_SIZE};this.yPixels=function(){return this.y*TILE_SIZE};this.putOnBoard=function(){this.elem.style.top=this.yPixels()+"px";this.elem.style.left=this.xPixels()+"px";var k="<img src='"+this.getPicturePath()+"' />";this.elem.innerHTML=k;addToBoard(this.elem)};this.refreshLocation=function(){this.putOnBoard()};this.getPicturePath=function(){return ANIMAL_FOLDER+this.type.toLowerCase()+".png"};this.tryToAttack=function(m){if(!m){return}var k=this.x+m[0];var n=this.y+m[1];var l=getAnimalAt(k,n);if(l&&l.isFriendOf(this)==false){fight(this,l)}};this.move=function(m){if(canMove(this,m)){this.x+=m[0];this.y+=m[1];this.refreshLocation();for(var l=0;l<currentLevel.stuffOnGrid.length;l++){var k=currentLevel.stuffOnGrid[l];if(k.x==this.x&&k.y==this.y&&k.hash!=this.hash){k.stepOn(this)}}}};this.enemyMove=function(){var k=getClosestTeammate(this);this.move(getDirectionTo(this,k))};this.enemyAttack=function(){var k=getClosestTeammate(this);this.tryToAttack(getDirectionTo(this,k))};this.getLocation=function(){var k=[this.xlocation*TILE_SIZE,this.ylocation*TILE_SIZE];return k}}const ANIMAL_DB={Elephant:new AnimalStats(26,3,15,2,36,3),Squirrel:new AnimalStats(16,4,11,3,20,4),Cow:new AnimalStats(22,3,19,1,21,4),Pig:new AnimalStats(21,2,18,1,35,4),Sheep:new AnimalStats(26,4,13,1,21,2),Chicken:new AnimalStats(35,0,20,0,40,0),Penguin:new AnimalStats(17,3,26,1,35,3),Bear:new AnimalStats(25,3,15,2,22,2),Goat:new AnimalStats(31,3,10,2,21,2),Owl:new AnimalStats(20,3,10,2,30,3),T_Rex:new AnimalStats(28,3,13,2,27,2),Triceratops:new AnimalStats(21,2,24,2,26,2),Plesiosaur:new AnimalStats(30,3,21,2,22,1),Pterodactyl:new AnimalStats(15,4,12,3,20,3),Giraffe:new AnimalStats(16,2,10,3,20,3),Hippo:new AnimalStats(21,3,14,1,44,3),Rhino:new AnimalStats(30,3,15,1,22,3),Zebra:new AnimalStats(44,2,12,1,27,1),Beaver:new AnimalStats(30,4,6,1,30,1),Ostrich:new AnimalStats(26,1,25,2,28,3),Peacock:new AnimalStats(19,3,21,2,31,3),Panda:new AnimalStats(33,3,21,1,26,2),};function AnimalStats(c,d,f,b,e,a){this.baseAtk=c;this.atkRaise=d;this.baseDef=f;this.defRaise=b;this.baseHP=e;this.HPRaise=a}const MAIN_CHAR_NAME="hathix";const MAX_TEAMMATES=5;const MAX_LEVEL=10;const EXPERIENCE_PER_LEVEL=1000;const MULTIPLIER=10;const MIN_MULTIPLIER=6;const MAX_MULTIPLIER=14;const CHANCE_OF_MISS=0.2;const CHANCE_OF_RECRUITMENT=0.1;const RECRUITMENT_BONUS=500;const TILE_SIZE=40;const NUM_TILES_SIDE=15;const IMAGE_FOLDER="images/";const ANIMAL_FOLDER="images/animals/";const TILE_FOLDER="images/tiles/";const OBSTACLE_FOLDER="images/obstacles/";const STEPPABLE_FOLDER="images/tiles/";const COIN_FOLDER="images/coins/";const POWERUP_FOLDER="images/powerups/";const OTHER_FOLDER="images/other/";const NUM_ACTS=5;const STAGES_PER_ACT=8;const FULL_HEART=100;const HALF_HEART=50;const QUARTER_HEART=25;const WOODEN_PROTECTION_SPAN=3;const METAL_PROTECTION_SPAN=4;const ULTIMATE_PROTECTION_SPAN=5;const HIT_ENEMY_MESSAGE="You died!";const BOMB_MESSAGE="You hit a bomb!";const OUT_OF_TIME_MESSAGE="You ran out of time!";const CHANCE_OF_CHEESE=10;const CHEESE_POINTS=200;const CHEESE_TIME=20;const CLOCK_BONUS_SECONDS=15;const PANIC_THRESHOLD=15;const NUM_DIGITS_FOR_POINTS=4;const TIME_BETWEEN_MOVES=400;const MOVE_UP=[0,-1];const MOVE_LEFT=[-1,0];const MOVE_DOWN=[0,1];const MOVE_RIGHT=[1,0];function makeHathixDialogue(a){return new Dialogue("hathix",true,"elephant",a)}function makeSignDialogue(a){return new Dialogue("Sign",true,"sign",a)}function makeBystanderDialogue(a,b){return new Dialogue("A random "+a,true,a,b)}function makeEnemyDialogue(a,b){return new Dialogue(a,false,a,b)}function makeBossDialogue(a,b,c){return new Dialogue(a,false,b,c)}function Dialogue(a,d,b,c){this.speaker=a;this.isAlly=d;if(!b){b=a}b=b.toLowerCase();this.image=ANIMAL_FOLDER+b+".png";this.text=c}function makeFrontDiv(){var a=Div();a.style.zIndex=3;return a}function makeObstacle(a,c,b){return new GridObject(a,c,makeFrontDiv(),OBSTACLE_FOLDER+b+".png",b,DO_NOTHING,DO_NOTHING,false)}function makeSteppable(a,c,b){return new GridObject(a,c,new Div(),STEPPABLE_FOLDER+b+".png",b,DO_NOTHING,DO_NOTHING,true)}function makePowerup(b,d,c,a){return new GridObject(b,d,makeFrontDiv(),POWERUP_FOLDER+c+".png",c,DO_NOTHING,a,true)}function makeHeart(a,c,b){b+="_heart";return makePowerup(a,c,b,GAIN_HEALTH)}function makeEnemy(c,a,f,e,d,b){return new Animal(c,false,makeFrontDiv(),a,f,e,0,b,d)}function makeBoss(b,c,a,e,d){return new Animal(c,false,makeFrontDiv(),a,e,d,0,b,0)}function fight(b,a){var c=b.attack()-a.defense();var d=(Math.random()*(MAX_MULTIPLIER-MIN_MULTIPLIER)+MIN_MULTIPLIER)/MULTIPLIER;c=Math.round(c*d);if(c<=0){c=1}if(pushLuck(CHANCE_OF_MISS)){c=0}if(c==0){Logger.log(b.name+" attacks "+a.name+", but misses.")}else{Logger.log(b.name+" attacks "+a.name+" for <strong>"+c+"</strong> damage.")}if(c>0){if(a.loseHP(c)){if(a.isAlly){a.die()}else{b.gainExperience(a);if(pushLuck(a.recruitmentChance)){a.recruit()}else{a.die()}}}}}function enemyTurn(){if(getEnemies().length==0){return}var a=getEnemyClosestToAlly();var b=distanceBetween(a,getClosestTeammate(a));if(b<=1){a.enemyAttack()}else{a.enemyMove()}}function getEnemyClosestToAlly(){var c=[];var h=[];var b=getEnemies();for(var d=0;d<b.length;d++){var a=b[d];var g=distanceBetween(a,getClosestTeammate(a));c.push(g);var f={distance:g,enemy:a,};h.push(f)}var e=c.sort()[0];for(var d=0;d<b.length;d++){if(h[d].distance==e){return h[d].enemy}}return b[0]}function GridObject(b,h,f,g,e,d,a,c){this.x=b;this.y=h;this.elem=f;this.name=e.toLowerCase();this.pictureSource=g.toLowerCase();this.move=d;this.stepOn=a;this.canBeSteppedOn=c;this.hash=this.name+Math.floor(Math.random()*1000);this.doMove=function(){this.move()};this.disappear=function(){this.elem.style.display="none";currentLevel.removeObjectFromGrid(this)};this.xPixels=function(){return this.x*TILE_SIZE};this.yPixels=function(){return this.y*TILE_SIZE};this.putOnBoard=function(){this.elem.style.top=this.yPixels()+"px";this.elem.style.left=this.xPixels()+"px";var i="<img src='"+this.getPicturePath()+"' />";this.elem.innerHTML=i;addToBoard(this.elem)};this.getLocation=function(){var i=[this.x*TILE_SIZE,this.y*TILE_SIZE];return i};this.getPicturePath=function(){return this.pictureSource}}function interpretLevel(f){var a=TILE_FOLDER+f.background+".png";for(var e=0;e<NUM_TILES_SIDE;e++){for(var d=0;d<NUM_TILES_SIDE;d++){getTile(e,d).style.background="#FFFFFF url('"+a+"') no-repeat left top"}}var b=document.getElementById("stuff_on_grid");for(var e=0;e<f.getGridObjects().length;e++){var c=f.getGridObjects()[e];c.putOnBoard()}}function Level(b,c,e,a,d){this.stage=b;this.background=c;this.stuffOnGrid=e;this.preferredAllyLocations=a;if(!d){d=[]}this.startDialogues=d;this.numDialogues=d.length;this.dialogueIndex=-1;this.getGridObjects=function(){return e};this.removeObjectFromGrid=function(g){for(var h=0;h<this.stuffOnGrid.length;h++){var f=this.stuffOnGrid[h];if(f.hash==g.hash){e.splice(h,1)}}for(var h=0;h<numTeammates();h++){var f=team[h];if(f.hash==g.hash){e.splice(h,1)}}};this.showNextDialogue=function(){if(this.numDialogues!=0){if(this.dialogueIndex<this.numDialogues-1){var f=this.startDialogues[++this.dialogueIndex];updateDialogue(this,f)}else{hideDialogue()}}}}function getLevel(a){var b=parseInt(a.substring(0,1));var c=parseInt(a.substring(2,3));switch(b){case 1:return getAct1Level(c)}}function loadLevel(b){alert("Welcome to level "+b+"!");Logger.log("Welcome to level "+b+"!");fullHealTeam();get("stuff_on_grid").innerHTML="";currentLevel=getLevel(b);interpretLevel(currentLevel);for(var c=0;c<team.length;c++){var a=currentLevel.preferredAllyLocations[c];var d=team[c];d.setLocation(a[0],a[1]);d.putOnBoard()}currentLevel.showNextDialogue()}function nextLevel(){var b=currentLevel.stage;var a=parseInt(b.substring(0,1));var c=parseInt(b.substring(2,3));if(c==STAGES_PER_ACT){return(a+1)+"-0"}else{return a+"-"+(c+1)}}function tryToEndLevel(){var a=getEnemies();if(a.length==0){loadLevel(nextLevel())}}const Logger={numEntries:0,logDiv:null,log:function(b){if(!this.logDiv){this.logDiv=get("log")}var c=new Div();c.className=this.numEntries%2==0?"log_standard":"log_alternate";c.innerHTML=b;try{this.logDiv.insertBefore(c,this.logDiv.childNodes[0])}catch(a){this.logDiv.appendChild(c)}this.numEntries++},};var currentLevel;window.onload=function(){Logger.log("Welcome to Sprinkle Safari! All messages will be logged here.");addTeammate(new Animal("Elephant",true,new Div(),0,0,1,0,MAIN_CHAR_NAME));loadLevel("1-1")};window.onkeyup=function(a){moveOnKeyPress(a)};function takeTurn(a){if(selectedAnimal){selectedAnimal.move(a);enemyTurn()}}function attack(a){if(selectedAnimal){selectedAnimal.tryToAttack(a);enemyTurn()}}const UP_KEYCODE=38;const LEFT_KEYCODE=37;const DOWN_KEYCODE=40;const RIGHT_KEYCODE=39;function moveOnKeyPress(b){var c;if(window.event){c=b.keyCode}else{if(b.which){c=b.which}}switch(c){case UP_KEYCODE:takeTurn(MOVE_UP);return;case LEFT_KEYCODE:takeTurn(MOVE_LEFT);return;case DOWN_KEYCODE:takeTurn(MOVE_DOWN);return;case RIGHT_KEYCODE:takeTurn(MOVE_RIGHT);return}var a=String.fromCharCode(c);switch(a){case"w":case"W":attack(MOVE_UP);return;case"a":case"A":attack(MOVE_LEFT);return;case"s":case"S":attack(MOVE_DOWN);return;case"d":case"D":attack(MOVE_RIGHT);return}}function canMove(c,f){var a=c.x+f[0];var g=c.y+f[1];if(a<0||g<0||a>=NUM_TILES_SIDE||g>=NUM_TILES_SIDE){return false}var b=getEnemies();for(var e=0;e<b.length;e++){var d=b[e];if(d.x==a&&d.y==g&&d.hash!=c.hash){return false}}for(var e=0;e<numTeammates();e++){var d=team[e];if(d.x==a&&d.y==g&&d.hash!=c.hash){return false}}for(var e=0;e<currentLevel.stuffOnGrid.length;e++){var d=currentLevel.stuffOnGrid[e];if(d.x==a&&d.y==g){if(d.canBeSteppedOn===false){return false}}}return true}const DO_NOTHING=function(){return};var team=[];var selectedAnimal=null;function numTeammates(){return team.length}function fullHealTeam(){for(var a=0;a<numTeammates();a++){team[a].fullHeal()}}function addTeammate(a){if(numTeammates()>=MAX_TEAMMATES){return}a.isAlly=true;team.push(a)}function removeTeammate(b){for(var a=0;a<numTeammates();a++){if(team[a].hash==b.hash){team.splice(a,1)}}}function getClosestTeammate(f){var a=[];var g=[];for(var b=0;b<numTeammates();b++){var e=distanceBetween(team[b],f);a.push(e);var d={distance:e,teammate:team[b],};g.push(d)}var c=a.sort()[0];for(var b=0;b<numTeammates();b++){if(g[b].distance==c){return g[b].teammate}}return team[0]}function selectAnimal(a){if(selectedAnimal&&a==selectedAnimal){deselectAnimal(a)}else{if(selectedAnimal){deselectAnimal(selectedAnimal)}selectedAnimal=a;a.elem.className="selected_ally"}}function deselectAnimal(a){selectedAnimal=null;a.elem.className="ally"}const GET_POINTS=function(){switch(this.pictureName){case"red_coin":player.earnPoints(RED_POINTS);break;case"yellow_coin":player.earnPoints(YELLOW_POINTS);break;case"blue_coin":player.earnPoints(BLUE_POINTS);break;case"green_coin":player.earnPoints(GREEN_POINTS);break}currentLevel.removeObjectFromBoard(this);currentLevel.removeObjectFromGrid(this)};const GAIN_HEALTH=function(a){if(a.isAlly){var b=0;switch(this.name){case"full_heart":b=FULL_HEART;break;case"half_heart":b=HALF_HEART;break;case"quarter_heart":b=QUARTER_HEART;break}a.gainHPPercent(b/100);this.disappear()}};var list=[0,1,2,3,4,5,6,7,8,9,"a","b","c","d","e"];function getTile(c,a){var b=document.getElementById(list[c]+""+list[a]);return b}function setHoverInfo(c,a){var b=get("hover_info");b.style.display="block";b.className=c.isAlly?"ally_info":"enemy_info";get("hover_image").src=c.getPicturePath();get("hover_name").innerHTML=c.name;get("hover_hp_text").innerHTML=c.currentHP+"/"+c.maxHP()+" <i>("+Math.round(c.HPPercent()*100)+"%)</i>";get("hover_level").innerHTML=c.level;get("hover_attack").innerHTML=c.attack();get("hover_defense").innerHTML=c.defense();get("hover_experience_wrapper").style.display=c.isAlly?"inline":"none";get("hover_experience").innerHTML="<strong>"+c.experience+"</strong>; "+c.experienceLeft()+" until next level"}function hideHoverInfo(){var a=document.getElementById("hover_info");a.style.display="none"}function updateDialogue(b,a){get("dialogue").style.display="block";get("dialogue").className=a.isAlly?"ally_info":"enemy_info";get("dialogue_image").src=a.image;get("dialogue_speaker").innerHTML=a.speaker;get("dialogue_text").innerHTML=a.text;get("dialogue_next_button").onclick=function(){b.showNextDialogue()}}function hideDialogue(){get("dialogue").style.display="none"}function updatePoints(a){var c=document.getElementById("points");var b=padWithZeros(a,NUM_DIGITS_FOR_POINTS);c.innerHTML="<b>Points: </b>"+b}function padWithZeros(d,c){if(d==0){var a="";for(var b=0;b<c;b++){a+="0"}return a}else{var e=Math.ceil(Math.log(d)/Math.LN10);if(d==1||d==10||d==100||d==1000){e++}var f="";for(var b=0;b<(c-e);b++){f+="0"}return f+""+d}}function Div(a,c){var b=document.createElement("div");if(a){b.className=a}if(c){b.id=c}return b}function get(a){return document.getElementById(a)}function pushLuck(a){return Math.random()<a}function addToBoard(b){var a=document.getElementById("stuff_on_grid");a.appendChild(b)}function getInput(c,b){var a;do{a=prompt(c,b)}while(!a||a==MAIN_CHAR_NAME);return a}function getEnemies(){var a=[];for(var c=0;c<currentLevel.stuffOnGrid.length;c++){var b=currentLevel.stuffOnGrid[c];if(b.isAnimal&&b.isAlly==false){a.push(b)}}return a}function getObjectsAt(a,e){var d=[];for(var c=0;c<currentLevel.stuffOnGrid.length;c++){var b=currentLevel.stuffOnGrid[c];if(b.x==a&&b.y==e){d.push(b)}}for(var c=0;c<numTeammates();c++){var b=team[c];if(b.x==a&&b.y==e){d.push(b)}}return d}function getAnimalAt(a,d){for(var c=0;c<currentLevel.stuffOnGrid.length;c++){var b=currentLevel.stuffOnGrid[c];if(b.x==a&&b.y==d&&b.isAnimal){return b}}for(var c=0;c<numTeammates();c++){var b=team[c];if(b.x==a&&b.y==d){return b}}return null}function getDirectionTo(e,c){var f=rawXDistance(e,c);var d=rawYDistance(e,c);var h=xDistance(e,c);var g=yDistance(e,c);if(g>h){if(d>0){return MOVE_UP}else{return MOVE_DOWN}}else{if(f>0){return MOVE_LEFT}else{return MOVE_RIGHT}}}function distanceBetween(d,c){var e=xDistance(d,c);var f=yDistance(d,c);return Math.sqrt(e+f)}function xDistance(d,c){return Math.abs(rawXDistance(d,c))}function yDistance(d,c){return Math.abs(rawYDistance(d,c))}function rawXDistance(d,c){return d.x-c.x}function rawYDistance(d,c){return d.y-c.y}function dir(a){var b="";for(field in a){b+=field+"<br />"}document.write(b)};